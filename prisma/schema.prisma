// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User Model
model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.String
  sessions Session[]
  accounts Account[]
}

// Account Model (Google or GitHub)
model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String 
  providerAccountId String 
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int? 
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  // Relation between User and Account
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Unique key for Account (Account_provider_providerAccountId_key)
  @@unique([provider, providerAccountId])
}

// Session Model
model Session{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  sessionToken String @unique
  expires DateTime

  // Relation betewwn User and Session
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// VerficationToken Model
model VerificationToken{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String 
  token String @unique
  expires DateTime

  // Unique key  for VerificationToken (VerificationToken_identifier_token_key)
  @@unique([identifier, token])
}

// Movie Model
model Movie{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  videoUrl String
  thumbnailUrl String
  genre String
  duration String
}